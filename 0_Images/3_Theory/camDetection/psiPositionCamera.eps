%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.1049112 \\(R2018b\\) Update 3. Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 360 281
%%HiResBoundingBox: 0 0 360 281
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font KCJOFX+Helvetica
%!FontType1-1.0: KCJOFX+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /KCJOFX+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -212 709 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 44 /comma put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 71 /G put
dup 80 /P put
dup 84 /T put
dup 93 /bracketright put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9660E97140986C460AAFC0F27F41C0F31EA98BAC1D6EC92F1EA1F495
8778B4E03D6924C79C969F94D95DEC2827E57BCB1056104759BEE983DD5ED2A4
B69CC867EC956E793B16316C479C430E94AD23FA16F59EA99259DC04F50F9EC7
119268AE551F4064E33A4BFFCC48DD28CD7C0EB502D506B6D78C9024039E556E
C5055DFC5BD273CBEB8CF2AF86661E8E841332D56D62DFACBF4621592A9146B6
3BF70F4E6C5313B39D6A3E658171099548294A83EBE716D55698709C5E355161
E9969363BCF099707DF54DC49DD4944D005C8B407C16D194D215AFB18B4BE351
7F0D65FA31DDEBF9E65E0AA3FDC52C88D58DAEF1DB78A4F195111A47900F052B
8C1CE285702BF065E378FD5275C5A5F2D43687A380CC1DF743129C48C83F5159
9A544EB5A2325B94F2840424DC9C94979784A449DA54E76BD7A4896FECFD6C9B
D567DC121EBDB26E6E29BDDF727E5C13BCDD66197DD2CCB17B52E11A285147EA
52E9A6C4CBA83451090FC3100AD421F0094758704C7CF6F31A478F2F8CFB0094
7D5EDBB49A9908F885CCCCEAEA73B0AD765C99EA499182588ABC84F36CE4E148
83432F32242A35355CEC2D574D864510F46489E07436B898EA5064115E61F199
75EA656F03F1CA9CCE234285148C6B1A93D860A30AE714931A778E618B9EC9CD
A12B07D8562E789FD9FE4B3D7671F14B4D8EB60495A9EE6DF9742425699FD4A5
F365CD6904EB47A0C9B7394E3B54F0E245B31185D0B2BC2B800785ECCD7E86B4
EB4CC680F82812CE51DBAC88EAA499D3B2392348F8123AAD777F3C937FB01BC7
E2C7C48AE008A9EA429A9A5DEADBBE4804E86506C3223476DC035990E2468577
BEEBBAAADC6ABAC9ED5E24DDF6F3957F3699EAC5D1C3426785354D1309414489
CEE84861BBE722F1C248131AFFC86870FDE788E9A4CB60232F6638268B3A7AEC
B72AE7E30FE666420B9C27AEEF75748CA923DA7B90223307E043610F9AFF42D2
320C176EBB916A3786CCD42725CC514B40EAC0A8C3FDD92DAB78A2D24815FC1E
A860313CA18BB6E433B9D37F8F866FEF9313D7AE0B50B5FE295A414B56D8C975
02377A08B5037298B25202A0518758C5E07FAD6CC564BFC420E41F94FBD9903A
0C8D962D6CE4EF287C55C4CE2BAEB3A34547A11769D8A5489D5D18200039C2EE
CA9500F03BDAD2466799EDFC14BD92CEFD6475254B3338B8C8548AA0E3373FA7
25CF8D41932F7F9F3C74622E534FB2B7B707464A21F4FB0DED29D1833A144F69
37CC43EA308D4A6E488787456E3C4DAC794A0543F14F6FCDBAA4FE9D434DC60B
E4DDA41FC11DD5245CEAF8BADC9AA96944EACA0FB93C4B0A447260EB9247F796
575D46B925A2480C04F1790332AFF01AF38B40533262AC71FE631ED7423B22A1
B53C639E6A1747F064E6D4B04471F1B4EFE2A21C6282614A105B65C65BBF8563
BB90BE5B50B5EFE02667CE8685364C1FFB2DC718FC2156BDBFCA5DDACC2E6A1C
47B8FD1EE4554D9ACE76143C7A49FD945C0CE332635484EF6575D21D182FA51C
4C429DC8128DB39CEAE44F3C552EBD94E4772CFC524C16B97C1FC2AD53953ECB
392DB3FB8D667846F2F8C10EDE96FAA900EA8D18AEC76CB6B0F6E1541C1906C6
BE515D66713C95708BD88EF1E347AE4776C9F40A7538633879C2B7BB458F97CE
8C3F322BCF92320056C19A5179A1723E9CFBC352B0B806E5B8E22143B2D76E84
0E54A0FC3D2C0185DA4A1DC1FD6120BD0CA6A784AEF4778A10F50D0E29704718
7F1BC05642008EE09BC0D27A80B00288FBEB2CC3ADCF3060CE315005FED69F98
E181D342D8AC786FEE710E63F5EAC83A913E3A9AF837C09D94A0C1B162DECA00
DE1B04FC67CD9107F63ECFFD0F4573354C1C32FFE87048E7F75E3DA07F408357
9332CC01C463E75B5083C1A6BC04AEB5B5F97A8D0BF2004C34F4D761EB55FA6A
5DE041F7554C9C08565F5B7361B3D74AC7B8E83C9540171C9ECA994E43F5873A
56D729C20C667BA3AFB5C94DDA2A09AF26F51DC51E5B8BE85B50FC8597860115
DBAD044F974FD7FA2C2E790BCFBC96930F524E6160F735102297D91546D46D6A
82E5538E28765628748102E6BD09CEF505E2C40AA70444AED0FE7FA8B5280C0E
0160892B17D449C52DCDE0DBBEC888FED66FF080DA3190DD6B8762A90536EB46
5AF90FE3F864D836170B9A8F9E66FACB38EA9820F92455E18676883F4F8D77CA
F3495C9DAD31B7A44D40DF563BF55244E88A7214CFF836A6C0424EF7147C70E4
0ABBC821550582A9F232A67906378AC324A6879798D1C99AA3D77B980920D672
FCB9583D21C1209CF2167597A4A0C36AFA8FFE6B50884F0F092428A14A3ABFF7
C6175AD8C2C56CA103D0B99F27055F24C078F59301CF38BB170C3A56B6C4DDEA
C297412B8CFBC491571C74E6CF49F46AD9DCF991420D3E110597D2C0A9F05141
41D8EB46BE880ADB098460CFAFA269C39C9773B01560EFE8C20DCED2AC6ACBBD
24E35C167D82AD5F0274E465314B0261829F2071F1412DA2C8F7CE0CFFACEEE6
33D4DD0EC28D39F6A97B944540E7B16FB9CDFB75BCC3C9E559D125EF82E96CFF
89AA221D68A89DF02615B35EBE6D59E230702A2CC500C17F7F53284C17DCF98D
4AF0927BCF5F2D405633DA283A37C7131C1E72701091749D4AF6DBC2F42A0963
7C62A6D650AED71158A80F1E8F0143A1E6D765B8795E7EEA64EDE95D5837CD99
EA8199398B2915F25D2CA1B77226A7CC169440D4E4A29AAAD762BAB94C527964
7D34C3438E3130CF258FDB56EEEE9F1FE3F3E00521E9B7FA4A1BF8D35A20ADC6
EA77000DBF27883EED9CF76535A8E3029FD3458F3F06ABCF2B9F5AE725FB1C12
3A5BCBB8717D6EE6630A4E5DA9FCEB9DFF8CAEAA397B4F14C3B4FF716ACCA24A
8F05C678E54D54400C45CBCF7FFCCFF407F90F52DF647D57A6AAFCCD44866A41
A529624F800E2FFF093C6F2C6D173D36D963F634E1D709897ABA3EEF02A5E46C
B7758FF7299304512AD7ACF1B7AAE0904BD77A77A097784695C90CDD1C6BECB0
B8DEAB0E2BD0E0D72DBC24D02A1F9A4CF681EB31AB8F7EBBCE8BA01B768F2AC1
39CE4238E5FA325012AE28F9B34EF2AB48F3645FBCA3CF55FC42C8F0333A17D5
46AFD087CC4F83FCA80565F4B0A6FEA921EF488ACDE9BD0FFBAAF91CAB9EA47F
B7F44DC260E4D33BC4E6338146EDA1166DFACAE1DD7F4E8946E873425182C2EE
47AD63CAF832710108F531030E566C867F4921F2002F9EF5A714DB34F4DA8EAC
289CCCB760E3024D85487B78B5FA665FB13A11715F646A25FAB07C7652DE2744
FE6891DC71523FA498B1DA96CA471FF5D2A416C50065B3863ABEC2EBB7365C07
BA5EE573F5980E6043516085F0815D19400A3A41A70EB647278BD12B8425C5C5
FB8329ADC38663D9A8B99A2BD63F616CF1457103D3F1551105002D7BD8ECDF85
DCF4D4702AED3F8140994507683A29AB6F8928E67D7FB5C79A491BA759EB798A
9CD80489B7BBC8032365D3CEA46388C1787094BE1AC142EA716D2784431BCD49
E9FB3C070C5F12D0F1DD70AC849C3F18153C05C67EF30CB0A48FC5562EE98AA6
2E623B110F7DFF4A1F3163E7A3EDCBDCBAE8791102A1B8D3F762C13E952B49D0
C530A49EDE26712FC4CFD3134E13DCA9268BEDB2C2C4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /KCJOFX+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 360 281 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-360 -170 4200 3150 re
f
-360 -170 4200 3150 re
f
187.5 175 3255 2572.5 re
f
5.0025 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
187.5 175 m
3442.5 175 l
S
187.5 175 m
187.5 207.551 l
S
652.5 175 m
652.5 207.551 l
S
1117.5 175 m
1117.5 207.551 l
S
1582.5 175 m
1582.5 207.551 l
S
2047.5 175 m
2047.5 207.551 l
S
2512.5 175 m
2512.5 207.551 l
S
2977.5 175 m
2977.5 207.551 l
S
3442.5 175 m
3442.5 207.551 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 1.5 3.75] Tm
0 0 Td
/F8_0 9.99975 Tf
(\(-8, -6])
[3.329917
0
3.329917
0
5.559861
0
2.779931
0
2.779931
0
3.329917
0
5.559861
0
2.779931
0] Tj
-1705.12 TJm
(\(-6, -4])
[3.329917
0
3.329917
0
5.559861
0
2.779931
0
2.779931
0
3.329917
0
5.559861
0
2.779931
0] Tj
-1705.12 TJm
(\(-4, -2])
[3.329917
0
3.329917
0
5.559861
0
2.779931
0
2.779931
0
3.329917
0
5.559861
0
2.779931
0] Tj
-1892.62 TJm
(\(-2, 0])
[3.329917
0
3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2225.62 TJm
(\(0, 2])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2371.12 TJm
(\(2, 4])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2371.12 TJm
(\(4, 6])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2371.12 TJm
(\(6, 8])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
Q
187.5 175 m
187.5 2747.5 l
S
187.5 175 m
220.051 175 l
S
187.5 496.563 m
220.051 496.563 l
S
187.5 818.125 m
220.051 818.125 l
S
187.5 1139.69 m
220.051 1139.69 l
S
187.5 1461.25 m
220.051 1461.25 l
S
187.5 1782.81 m
220.051 1782.81 l
S
187.5 2104.38 m
220.051 2104.38 l
S
187.5 2425.94 m
220.051 2425.94 l
S
187.5 2747.5 m
220.051 2747.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 8 14.125] Tm
0 0 Td
/F8_0 9.99975 Tf
(0)
[5.559861
0] Tj
0 32.1563 Td
(1)
[5.559861
0] Tj
0 64.3126 Td
(2)
[5.559861
0] Tj
0 96.4689 Td
(3)
[5.559861
0] Tj
0 128.6252 Td
(4)
[5.559861
0] Tj
0 160.7815 Td
(5)
[5.559861
0] Tj
0 192.9378 Td
(6)
[5.559861
0] Tj
0 225.0941 Td
(7)
[5.559861
0] Tj
0 257.2504 Td
(8)
[5.559861
0] Tj
Q
0 J
187.5 175 m
3442.5 175 l
S
7.5 w
/DeviceRGB {} CS
[0 0.447 0.7402] SC
217.5 2317.96 m
217.5 2334.53 204.066 2347.96 187.5 2347.96 c
170.934 2347.96 157.5 2334.53 157.5 2317.96 c
157.5 2301.39 170.934 2287.96 187.5 2287.96 c
204.066 2287.96 217.5 2301.39 217.5 2317.96 c
h
S
682.5 1732.48 m
682.5 1749.05 669.066 1762.48 652.5 1762.48 c
635.934 1762.48 622.5 1749.05 622.5 1732.48 c
622.5 1715.91 635.934 1702.48 652.5 1702.48 c
669.066 1702.48 682.5 1715.91 682.5 1732.48 c
h
S
1147.5 1107.32 m
1147.5 1123.89 1134.07 1137.32 1117.5 1137.32 c
1100.93 1137.32 1087.5 1123.89 1087.5 1107.32 c
1087.5 1090.76 1100.93 1077.32 1117.5 1077.32 c
1134.07 1077.32 1147.5 1090.76 1147.5 1107.32 c
h
S
1612.5 530.98 m
1612.5 547.547 1599.07 560.98 1582.5 560.98 c
1565.93 560.98 1552.5 547.547 1552.5 530.98 c
1552.5 514.414 1565.93 500.98 1582.5 500.98 c
1599.07 500.98 1612.5 514.414 1612.5 530.98 c
h
S
2077.5 540.141 m
2077.5 556.707 2064.07 570.141 2047.5 570.141 c
2030.93 570.141 2017.5 556.707 2017.5 540.141 c
2017.5 523.574 2030.93 510.141 2047.5 510.141 c
2064.07 510.141 2077.5 523.574 2077.5 540.141 c
h
S
2542.5 1098.2 m
2542.5 1114.77 2529.07 1128.2 2512.5 1128.2 c
2495.93 1128.2 2482.5 1114.77 2482.5 1098.2 c
2482.5 1081.63 2495.93 1068.2 2512.5 1068.2 c
2529.07 1068.2 2542.5 1081.63 2542.5 1098.2 c
h
S
3007.5 1731.82 m
3007.5 1748.39 2994.07 1761.82 2977.5 1761.82 c
2960.93 1761.82 2947.5 1748.39 2947.5 1731.82 c
2947.5 1715.26 2960.93 1701.82 2977.5 1701.82 c
2994.07 1701.82 3007.5 1715.26 3007.5 1731.82 c
h
S
3472.5 2383.29 m
3472.5 2399.86 3459.07 2413.29 3442.5 2413.29 c
3425.93 2413.29 3412.5 2399.86 3412.5 2383.29 c
3412.5 2366.73 3425.93 2353.29 3442.5 2353.29 c
3459.07 2353.29 3472.5 2366.73 3472.5 2383.29 c
h
S
5.0025 w
187.5 175 m
187.5 2317.96 l
S
652.5 175 m
652.5 1732.48 l
S
1117.5 175 m
1117.5 1107.32 l
S
1582.5 175 m
1582.5 530.98 l
S
2047.5 175 m
2047.5 540.137 l
S
2512.5 175 m
2512.5 1098.2 l
S
2977.5 175 m
2977.5 1731.83 l
S
3442.5 175 m
3442.5 2383.29 l
S
7.5 w
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
217.5 2387.88 m
217.5 2404.45 204.066 2417.88 187.5 2417.88 c
170.934 2417.88 157.5 2404.45 157.5 2387.88 c
157.5 2371.31 170.934 2357.88 187.5 2357.88 c
204.066 2357.88 217.5 2371.31 217.5 2387.88 c
h
S
682.5 1726.17 m
682.5 1742.74 669.066 1756.17 652.5 1756.17 c
635.934 1756.17 622.5 1742.74 622.5 1726.17 c
622.5 1709.61 635.934 1696.17 652.5 1696.17 c
669.066 1696.17 682.5 1709.61 682.5 1726.17 c
h
S
1147.5 1108.18 m
1147.5 1124.75 1134.07 1138.18 1117.5 1138.18 c
1100.93 1138.18 1087.5 1124.75 1087.5 1108.18 c
1087.5 1091.61 1100.93 1078.18 1117.5 1078.18 c
1134.07 1078.18 1147.5 1091.61 1147.5 1108.18 c
h
S
1612.5 526.863 m
1612.5 543.43 1599.07 556.863 1582.5 556.863 c
1565.93 556.863 1552.5 543.43 1552.5 526.863 c
1552.5 510.293 1565.93 496.863 1582.5 496.863 c
1599.07 496.863 1612.5 510.293 1612.5 526.863 c
h
S
2077.5 543.672 m
2077.5 560.238 2064.07 573.672 2047.5 573.672 c
2030.93 573.672 2017.5 560.238 2017.5 543.672 c
2017.5 527.105 2030.93 513.672 2047.5 513.672 c
2064.07 513.672 2077.5 527.105 2077.5 543.672 c
h
S
2542.5 1091.57 m
2542.5 1108.14 2529.07 1121.57 2512.5 1121.57 c
2495.93 1121.57 2482.5 1108.14 2482.5 1091.57 c
2482.5 1075 2495.93 1061.57 2512.5 1061.57 c
2529.07 1061.57 2542.5 1075 2542.5 1091.57 c
h
S
3007.5 1771.87 m
3007.5 1788.43 2994.07 1801.87 2977.5 1801.87 c
2960.93 1801.87 2947.5 1788.43 2947.5 1771.87 c
2947.5 1755.3 2960.93 1741.87 2977.5 1741.87 c
2994.07 1741.87 3007.5 1755.3 3007.5 1771.87 c
h
S
3472.5 2432.2 m
3472.5 2448.77 3459.07 2462.2 3442.5 2462.2 c
3425.93 2462.2 3412.5 2448.77 3412.5 2432.2 c
3412.5 2415.63 3425.93 2402.2 3442.5 2402.2 c
3459.07 2402.2 3472.5 2415.63 3472.5 2432.2 c
h
S
5.0025 w
187.5 175 m
187.5 2387.88 l
S
652.5 175 m
652.5 1726.17 l
S
1117.5 175 m
1117.5 1108.18 l
S
1582.5 175 m
1582.5 526.863 l
S
2047.5 175 m
2047.5 543.672 l
S
2512.5 175 m
2512.5 1091.57 l
S
2977.5 175 m
2977.5 1771.86 l
S
3442.5 175 m
3442.5 2432.2 l
S
/DeviceGray {} cs
[1] sc
270 2410 990 255 re
f
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 62.25 256.103] Tm
0 0 Td
/F8_0 9 Tf
(Predicted)
[6.003
0
2.997
0
5.004
0
5.004
0
1.998
0
4.5
0
2.502
0
5.004
0
5.004
0] Tj
Q
/DeviceRGB {} CS
[0 0.447 0.7402] SC
300 2594.79 m
510 2594.79 l
S
7.5 w
540 2594.78 m
540 2611.35 526.566 2624.78 510 2624.78 c
493.434 2624.78 480 2611.35 480 2594.78 c
480 2578.21 493.434 2564.78 510 2564.78 c
526.566 2564.78 540 2578.21 540 2594.78 c
h
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 62.25 244.647] Tm
0 0 Td
/F8_0 9 Tf
(Ground Truth)
[7.002
0
2.997
0
5.004
0
5.004
0
5.004
0
5.004
0
2.502
0
5.499
0
2.997
0
5.004
0
2.502
0
5.004
0] Tj
Q
5.0025 w
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
300 2480.21 m
510 2480.21 l
S
7.5 w
540 2480.22 m
540 2496.79 526.566 2510.22 510 2510.22 c
493.434 2510.22 480 2496.79 480 2480.22 c
480 2463.65 493.434 2450.22 510 2450.22 c
526.566 2450.22 540 2463.65 540 2480.22 c
h
S
5.0025 w
/DeviceGray {} CS
[0.1489] SC
270 2410 990 255 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font KCJOFX+Helvetica
%%EOF
