%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.1049112 \\(R2018b\\) Update 3. Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 372 281
%%HiResBoundingBox: 0 0 372 281
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font LUIRUM+Helvetica
%!FontType1-1.0: LUIRUM+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /LUIRUM+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 732] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 78 /N put
dup 80 /P put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9717A6272A275289BD1FB35B12257CF79B9ECF62F279FD939BCE5E30
019F9BF0A089BEF64B74130F7B73C12A015488012DCB4074893F7F2BFDFF883F
FDD68F49F4BC430ECD9382D37940E329F76DC73A163897CA48A004E1D543F9A2
8CBADFD283760ED9D0034B90678E3A3FE7D19CDE6699EEF30F94AEB1E358618C
4367F4284D24C1247D2525413E4D6A53C1C29C97121D11193D9CB0B88F6607FD
C671BC61D2CCE6BE3B047263C3F64A9FFEC4CB39FB338DD786CEBACF421806A2
15900E49853539D80F41986E8C48266446F57307C76AF5B4DC2DDF06BDF393E2
652B9640EB25D966FA27176DE39DB99791DE233E6ED5C23C5415679B6608AD1C
348799EF1B7F9B0D5E038AC5757B44A6A563C5289816359E5BB5B6E1C1F39003
1A00F6281F346592C6BE7A9D0EE3C1D06FD6CA959C58497B65FF7C7FAEEBBD96
6D620A1CD8BCB998E7648F21995EF5C368D61F7D473EDA9BB3100104A27C3B9F
544713CC93D8B7C582975C774C45A36524A28D2924131322CA70A9BBFA5B92B3
AB84226401B014C929D5A16DFB553D63CB304007E62F98627AEC72690256587F
17EA354924EA219AC273C7985F1570F0B965954B4DCFA46D918131F8B0BB19A3
B1E2A884748AD2540BF0923707C7E02FA8C8C12A357F381DB80F40441C56A6D5
DB6946829C1AB7C0874C331163C700C4A807C9DBC2F2408A4FB82F34FA83FA39
13EAD7A974579169FFC20274761931B7FF77525A23F95789E782F3146BB55DD0
748578489A43C89CB85A540F085E50B29E8CB5A058D17FA065830AC2DCB72BF2
F5A5DB9EF138AB3E4E9F01582B993AE5DD7D078F5003120F9D447B94388E08A9
D5A219F7D4DA03AE45CFE7F9C1F2AED1EF536519B63DDA5305C3A526847B4924
151CCEE6BC276BD3FAB5F837948A80FF8E6B255BF34C895829177A43160240B3
F5F3BA519D53AA29F2530C90A6177F6EAE08064E5F231AAE8BAFC7074E79E311
CE81C21EAB6941D42815D792F57A9078202B8F37EC2D76D4F220000379151A10
4A3B0BD37C691F27AD5B9B9565F4F9415CC23B7952F3B1396EEBA6FB83D8293F
65621A427B3A3B7FA3E9E01A19980A799E59D49F80D4D88BEBBF0C87274A31A7
B30932484E23A91DFC73A2A0D7B24CCD17388E7C2CEDC6EA1A389526B4DCB018
8B9048B7950B4B939F3B0F74334047BC56F086562F4514E9B04EAA3D3528C696
C426564F7054BC26A104523B7792AE7A3736233655C1D275F34DD52E7C2F79BF
3D541E63CF931586DA9384213F5406EB0A4D6F7F4332CCED7C14BE80336B78DA
12DEE091D9CC413C582E2A3BBBBE8F208A5E0AD7BDFF33EDD06AE26B1047DCF4
A31BB8FF61D73C462F80896AF0DEBCD56A779534CF7EF1E46BC4A7D27A49B296
1B96C5D85B1E7FDE8F7BC880F00D168D235CFD54826ECED4A25AC39EAA7E2A36
24D3BF3DD84F2491BEA524CFCD880F09C817D962B61AAA94F211616F7B5B88EA
9261969B0E72763A67DBF7186CE3FC9C897DF4CE5D4817027521DC745B3E47F5
D891777E7FA2F50212D8D31F20200346D912C6A09222E7C0E05AD5BCC5EC0719
B4CB07E97D821A473DDB054C399478F8E6FA318278855975C35CE9EA862B8DCC
1748705D7BD8F293C9DBB7839800974323BE79D124A94FD9C39EA4F951E1E85B
5CFDD9A62F5B427BE23996716E7CA6D8D7D2F1D868374F16D2EED9ED5925B17E
DAEAB1C20AB265D8695B0CA44E4A2ECEEF2F5A189DC759B514341F6230C071EA
93A4A7D90E4F78725A0C9371AC22B7A99F281A9A81F17D4807B17C53C999C077
4DF18DC51A724F4852AA3ED07EE259826FEB182EAD7005FE989F372D1D94B5F3
7F10E146B622EE405EBCA3B0ED590C35E900E0FD39AB9F23ED4072F866C09068
FC5424155CCC1F137A797092F5E77B0C6BCDABEF47AE2BC885E1F1B0E17A812B
82B461F2B9BFB93CF7D2AFF8092E345BC301D27BF1C668D8921DEC048E0D1E3A
E32DB288D2F110B80D429BE59009268E354C921F5A0132084C5DF0AEA43F8993
9EC64D434F0DC764B99A56E60D9896BB537AA70A9D88CDC2A216119FCE6BE537
994176F90B454D404080EC604FF9B3EBA08AAA22452A27C44AE4BD7E77A6C989
830C9AE798BF656C9062683BE0C276E3A558AA0CBF6376D22C1336B22F8CA65B
BD8CA8EBA8D0AD129943041F4694A0F579445766D79650DA08C6DD8929D71E99
6F20D214196020262FD86B6E72841D7286DF89376FA2741FC96B443CC08C3441
229F4457D1FAAEEDF82F9A7E42A702AEA70EA8B9C2EC5F36F3E35E9EC1430BC5
BCCE9D1F7DFE9EFE0B782BC244B2271771FA0CFAE9A9403DD0CD424E742BE72B
E060CA19EFCE975574B9FCC1A770CCB7BB29A101D0A8631D8272BFFFDA5E60D2
490C1440B66730471EC83252C1FC7CE140BE322792BE86F5323EC542A7B51741
9C59383C01BCFE805B04C23C0C3A43A5BA6ACE98AD1C13E1EF2C7F342B9F027D
8F297F6B5FD4AB5E63E42AA7E2EF87B1B737EF92D741E956EA1C79E005D4C5D9
938DB71F09A8F68D4084953A32FE585D229C1F21AA1D6E88EC8B98F9578969A1
A1BA9A371D41227FA57C9CEB95ED7A8002C8314CBD7EF9A3D471054B2DD39CF0
9EC3E5CFE8E7748A710FF5E4B002CB75C9EC4247298256366A347FE09B750AB9
EC71EB8F21104F66E57229DE64B38970D6B8880B792DABC85F7E70A360A086B1
B3730AB48DCBFB7B26992399BE12E16FCA59054913195CE56CD116BE5BD0E785
BB1807DF59D4461A2A6F81FF91BF717E5A20DE283F9280BF0A0B6B16D7884B2C
2292E4E29C2AB6F485C932580DD1F38A63C3B05DB75A83FF483767B683D34C68
DB90A14F3BB93390F9BC292B12CF2C48D252081C6178C090836A20AE404EBD11
45CAEC3E7F62EEA4AE8EFFA83C52111613CE947129DAFDB7BEBAC3D75D915FB1
0D06B94B6449EB569D001E65894614A71779DE2FD1DCC3772EB39EC589635C6D
78E28125AE33008647140F52214FC3C910EAF60F4E16A3B1BC8A26E6713ABE2D
7A3179B47772DE42F2A81D747DF5B64751D30E0805E0E57E30FEFCF8015BA5E8
09CFF150B13470BAA4B023687C5E67B35EA8741AD8F65F566F6B610FAA780191
0EC1EAE86BD78D6EDC79CD23103BE205984464FB93697C6CD2AE6BEDBEA61A2D
7E833CF9EE654EC19E44AE85CCF91B1028ECEA77746FDA3541ADBFD7EDB53D29
0C035E7B6F06C943A846D8EEA9A7AD3A2DE3329CE0FCCBBEBF60E60BEE2F9174
CAB3E4B1C27685425481F63EE7CA296083395EEE30F102FF275C7B246E809458
3A31706E5B00076379827CF4C6242226EF46CDF4A6C7260585FACA92F174A552
DB5DE178923BC0BBAAFF61750E433017D2A81E3F18AD45A811BFAA9F7A8AEE7F
7DCC324175D8CB85D7C2604EF56B2A433C7059CF3F4D00F11DA9D0FE3706CC29
1B065DC68352D2622DA408651D1E76898133946D4D753AAA8BE071D494EA4DAB
065C2A7C5A14803A35316556730E778A667CF330892C37BA70803FC11D988840
61BFF43CDEF7D44B3BEABD68DAFB5BEC674062E2804B3184DFB46E9D487E772B
64AC0D0BC7D281998A9FF6BA7C165443133926CA5FCF38CE8E81D750D8264CA0
4B4718E09502B797ED2283D4857E3F49E118812792EBF53A6C11D15E1E417E4D
F4CD397458543B77A5FC5CCE1AE4D3F94B2DF056C2609B3E180F853AEA941321
8374264EE9102E273817B4B040A9729C562324D64EC6E85D222866914F27FEB1
D9E6C0A7CC70EE25C340881642056C847E9085B8C86FFD55C14D6C3639851A36
43DCA0EA5D65F8AD4334CBA170D718297BB79B827AE410C95AC5B053675C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /LUIRUM+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 372 281 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-300 -170 4200 3150 re
f
-300 -170 4200 3150 re
f
247.5 175 3255 2572.5 re
f
5.0025 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
247.5 175 m
3502.5 175 l
S
247.5 175 m
247.5 207.551 l
S
789.996 175 m
789.996 207.551 l
S
1332.5 175 m
1332.5 207.551 l
S
1875 175 m
1875 207.551 l
S
2417.5 175 m
2417.5 207.551 l
S
2960 175 m
2960 207.551 l
S
3502.5 175 m
3502.5 207.551 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 11.25 3.75] Tm
0 0 Td
/F8_0 9.99975 Tf
(\(2, 4])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-3146.14 TJm
(\(4, 6])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-3146.14 TJm
(\(6, 8])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2808.63 TJm
(\(8, 10])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
5.559861
0
2.779931
0] Tj
-2290.13 TJm
(\(10, 12])
[3.329917
0
5.559861
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
5.559861
0
2.779931
0] Tj
-2034.14 TJm
(\(12, 14])
[3.329917
0
5.559861
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
5.559861
0
2.779931
0] Tj
-2034.14 TJm
(\(14, 16])
[3.329917
0
5.559861
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
5.559861
0
2.779931
0] Tj
Q
247.5 175 m
247.5 2747.5 l
S
247.5 175 m
280.051 175 l
S
247.5 496.563 m
280.051 496.563 l
S
247.5 818.125 m
280.051 818.125 l
S
247.5 1139.69 m
280.051 1139.69 l
S
247.5 1461.25 m
280.051 1461.25 l
S
247.5 1782.81 m
280.051 1782.81 l
S
247.5 2104.38 m
280.051 2104.38 l
S
247.5 2425.94 m
280.051 2425.94 l
S
247.5 2747.5 m
280.051 2747.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 1.25 14.125] Tm
0 0 Td
/F8_0 9.99975 Tf
(-0.2)
[3.329917
0
5.559861
0
2.779931
0
5.559861
0] Tj
12.75 32.1563 Td
(0)
[5.559861
0] Tj
3 64.3126 Td
(0.2)
[5.559861
0
2.779931
0
5.559861
0] Tj
3 96.4689 Td
(0.4)
[5.559861
0
2.779931
0
5.559861
0] Tj
3 128.6252 Td
(0.6)
[5.559861
0
2.779931
0
5.559861
0] Tj
3 160.7815 Td
(0.8)
[5.559861
0
2.779931
0
5.559861
0] Tj
12.75 192.9378 Td
(1)
[5.559861
0] Tj
3 225.0941 Td
(1.2)
[5.559861
0
2.779931
0
5.559861
0] Tj
3 257.2504 Td
(1.4)
[5.559861
0
2.779931
0
5.559861
0] Tj
Q
0 J
247.5 496.563 m
3502.5 496.563 l
S
7.5 w
/DeviceRGB {} CS
[0 0.447 0.7402] SC
277.5 809.277 m
277.5 825.844 264.066 839.277 247.5 839.277 c
230.934 839.277 217.5 825.844 217.5 809.277 c
217.5 792.711 230.934 779.277 247.5 779.277 c
264.066 779.277 277.5 792.711 277.5 809.277 c
h
S
820 830.781 m
820 847.352 806.566 860.781 790 860.781 c
773.434 860.781 760 847.352 760 830.781 c
760 814.215 773.434 800.781 790 800.781 c
806.566 800.781 820 814.215 820 830.781 c
h
S
1362.5 992.914 m
1362.5 1009.48 1349.07 1022.91 1332.5 1022.91 c
1315.93 1022.91 1302.5 1009.48 1302.5 992.914 c
1302.5 976.348 1315.93 962.914 1332.5 962.914 c
1349.07 962.914 1362.5 976.348 1362.5 992.914 c
h
S
1905 1474.8 m
1905 1491.36 1891.57 1504.8 1875 1504.8 c
1858.43 1504.8 1845 1491.36 1845 1474.8 c
1845 1458.23 1858.43 1444.8 1875 1444.8 c
1891.57 1444.8 1905 1458.23 1905 1474.8 c
h
S
2447.5 1916.09 m
2447.5 1932.66 2434.07 1946.09 2417.5 1946.09 c
2400.93 1946.09 2387.5 1932.66 2387.5 1916.09 c
2387.5 1899.53 2400.93 1886.09 2417.5 1886.09 c
2434.07 1886.09 2447.5 1899.53 2447.5 1916.09 c
h
S
2990 2344.82 m
2990 2361.39 2976.57 2374.82 2960 2374.82 c
2943.43 2374.82 2930 2361.39 2930 2344.82 c
2930 2328.25 2943.43 2314.82 2960 2314.82 c
2976.57 2314.82 2990 2328.25 2990 2344.82 c
h
S
3532.5 2433.71 m
3532.5 2450.27 3519.07 2463.71 3502.5 2463.71 c
3485.93 2463.71 3472.5 2450.27 3472.5 2433.71 c
3472.5 2417.14 3485.93 2403.71 3502.5 2403.71 c
3519.07 2403.71 3532.5 2417.14 3532.5 2433.71 c
h
S
5.0025 w
247.5 496.563 m
247.5 809.273 l
S
789.996 496.563 m
789.996 830.785 l
S
1332.5 496.563 m
1332.5 992.914 l
S
1875 496.563 m
1875 1474.8 l
S
2417.5 496.563 m
2417.5 1916.09 l
S
2960 496.563 m
2960 2344.82 l
S
3502.5 496.563 m
3502.5 2433.71 l
S
7.5 w
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
277.5 544.633 m
277.5 561.199 264.066 574.633 247.5 574.633 c
230.934 574.633 217.5 561.199 217.5 544.633 c
217.5 528.066 230.934 514.633 247.5 514.633 c
264.066 514.633 277.5 528.066 277.5 544.633 c
h
S
820 559.223 m
820 575.789 806.566 589.223 790 589.223 c
773.434 589.223 760 575.789 760 559.223 c
760 542.652 773.434 529.223 790 529.223 c
806.566 529.223 820 542.652 820 559.223 c
h
S
1362.5 772.75 m
1362.5 789.316 1349.07 802.75 1332.5 802.75 c
1315.93 802.75 1302.5 789.316 1302.5 772.75 c
1302.5 756.18 1315.93 742.75 1332.5 742.75 c
1349.07 742.75 1362.5 756.18 1362.5 772.75 c
h
S
1905 993.77 m
1905 1010.34 1891.57 1023.77 1875 1023.77 c
1858.43 1023.77 1845 1010.34 1845 993.77 c
1845 977.203 1858.43 963.77 1875 963.77 c
1891.57 963.77 1905 977.203 1905 993.77 c
h
S
2447.5 1451.23 m
2447.5 1467.8 2434.07 1481.23 2417.5 1481.23 c
2400.93 1481.23 2387.5 1467.8 2387.5 1451.23 c
2387.5 1434.66 2400.93 1421.23 2417.5 1421.23 c
2434.07 1421.23 2447.5 1434.66 2447.5 1451.23 c
h
S
2990 1940.36 m
2990 1956.93 2976.57 1970.36 2960 1970.36 c
2943.43 1970.36 2930 1956.93 2930 1940.36 c
2930 1923.8 2943.43 1910.36 2960 1910.36 c
2976.57 1910.36 2990 1923.8 2990 1940.36 c
h
S
3532.5 2033.52 m
3532.5 2050.09 3519.07 2063.52 3502.5 2063.52 c
3485.93 2063.52 3472.5 2050.09 3472.5 2033.52 c
3472.5 2016.95 3485.93 2003.52 3502.5 2003.52 c
3519.07 2003.52 3532.5 2016.95 3532.5 2033.52 c
h
S
5.0025 w
247.5 496.563 m
247.5 544.629 l
S
789.996 496.563 m
789.996 559.219 l
S
1332.5 496.563 m
1332.5 772.75 l
S
1875 496.563 m
1875 993.77 l
S
2417.5 496.563 m
2417.5 1451.23 l
S
2960 496.563 m
2960 1940.36 l
S
3502.5 496.563 m
3502.5 2033.52 l
S
/DeviceRGB {} CS
[0.9297 0.6933 0.125] SC
247.5 597.715 m
789.996 912.871 l
1332.5 1228.04 l
1875 1543.2 l
2417.5 1858.36 l
2960 2173.52 l
3502.5 2488.68 l
S
/DeviceRGB {} CS
[0.4939 0.1841 0.5566] SC
247.5 471.398 m
789.996 620.254 l
1332.5 822.527 l
1875 1078.23 l
2417.5 1387.34 l
2960 1749.89 l
3502.5 2165.85 l
S
/DeviceGray {} cs
[1] sc
330 2177.5 1455 487.5 re
f
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 68.25 256.054] Tm
0 0 Td
/F8_0 9 Tf
(Pure geometry)
[6.003
0
5.004
0
2.997
0
5.004
0
2.502
0
5.004
0
5.004
0
5.004
0
7.497
0
5.004
0
2.502
0
2.997
0
4.5
0] Tj
Q
/DeviceRGB {} CS
[0 0.447 0.7402] SC
360 2594.3 m
570 2594.3 l
S
7.5 w
600 2594.29 m
600 2610.86 586.566 2624.29 570 2624.29 c
553.434 2624.29 540 2610.86 540 2594.29 c
540 2577.73 553.434 2564.29 570 2564.29 c
586.566 2564.29 600 2577.73 600 2594.29 c
h
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 68.25 244.518] Tm
0 0 Td
/F8_0 9 Tf
(Nerual net correction)
[6.498
0
5.004
0
2.997
0
5.004
0
5.004
0
1.998
0
2.502
0
5.004
0
5.004
0
2.502
0
2.502
0
4.5
0
5.004
0
2.997
0
2.997
0
5.004
0
4.5
0
2.502
0
1.998
0
5.004
0
5.004
0] Tj
Q
5.0025 w
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
360 2478.93 m
570 2478.93 l
S
7.5 w
600 2478.93 m
600 2495.5 586.566 2508.93 570 2508.93 c
553.434 2508.93 540 2495.5 540 2478.93 c
540 2462.36 553.434 2448.93 570 2448.93 c
586.566 2448.93 600 2462.36 600 2478.93 c
h
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 68.25 232.982] Tm
0 0 Td
/F8_0 9 Tf
(Pure geometry linear fit)
[6.003
0
5.004
0
2.997
0
5.004
0
2.502
0
5.004
0
5.004
0
5.004
0
7.497
0
5.004
0
2.502
0
2.997
0
4.5
0
2.502
0
1.998
0
1.998
0
5.004
0
5.004
0
5.004
0
2.997
0
2.502
0
2.502
0
1.998
0
2.502
0] Tj
Q
5.0025 w
/DeviceRGB {} CS
[0.9297 0.6933 0.125] SC
360 2363.57 m
660 2363.57 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 68.25 221.446] Tm
0 0 Td
/F8_0 9 Tf
(Neural net 2. order fit)
[6.498
0
5.004
0
5.004
0
2.997
0
5.004
0
1.998
0
2.502
0
5.004
0
5.004
0
2.502
0
2.502
0
5.004
0
2.502
0
2.502
0
5.004
0
2.997
0
5.004
0
5.004
0
2.997
0
2.502
0
2.502
0
1.998
0
2.502
0] Tj
Q
/DeviceRGB {} CS
[0.4939 0.1841 0.5566] SC
360 2248.2 m
660 2248.2 l
S
/DeviceGray {} CS
[0.1489] SC
330 2177.5 1455 487.5 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font LUIRUM+Helvetica
%%EOF
