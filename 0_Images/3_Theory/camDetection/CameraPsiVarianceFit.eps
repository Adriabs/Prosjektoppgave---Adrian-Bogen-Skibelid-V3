%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.5.0.1049112 \\(R2018b\\) Update 3. Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 376 298
%%HiResBoundingBox: 0 0 376 298
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font RPCROO+Helvetica
%!FontType1-1.0: RPCROO+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /RPCROO+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 732] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 78 /N put
dup 80 /P put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB9715CA72928BEE0164393313D2AF0707AE312143602591604078B3A1
7EEB1D3A78BDD38354EF4461106548CCC60CE7C56AC80730CFB210D9E3738544
5B15A250397A890F20DCEA7C69A6CFAE65854C5E3280F8D06691D3D2FCD7AF76
639E1B06DD70AFF1317FEDAB25DCB428B733F1B86A297C5643A20200316FA2A6
6A8F7CF89383D4ECA3F769D94BD44BC8962DE4DEBD752CC5CCFD6CFDB60C0250
54D637B76CF65E024988480FB42C12AE5BA45F96902437B9C5C1FF297738FFE1
78C94761FAE0D179EDB5B7501F37D28745D81AC32DA2FCBCE5E0B5926C68F495
CC64C5011DA0277BA031122ECB987DF8B65B65A4A83A09465DF709283B89C7AD
0E9DDD303ECFB0C138A3586D1E26FDBF954615B3FB80AFF154F48818DD3F6448
25F5A86F7181E8E8D3F98AE33A013848035ECF2279C2F4D3268281AF7444DD49
0E34E36E85426BB73F631F3F06C865C736FC85DB995ED07E3E25F4EF3A5F42AD
5239EB52E9C6AE6F59CB0131B85DC8EB8DA3D4C45B5CBAAFD674EF30E2D3EA1C
B88DA4A1C015309DD614636D4FD57EDB559C6CA2319100F34925B056D46FDD8E
80D54FE9CDFDB2362B54458817DB0FDDF6B59AD1894CAA4A9EA84F2B1E617059
3298C02ECF667D3285AF1CE7A54D3D10394045F50A3987417F79690B21890788
E730AD41E50D03611FEA78F86FFE87E0FD549A2918E7C57A8D8DD7950862BF86
29D413745C28A3F5CBDB378678A50545410271CE5330C26384EB4BB1260318F9
DB2FCA9703FF4633FD74EDD230A9524F4FAAA2DAE0133EC51B8C3460097CFE13
EA17E229D1EDF47379C581208704AB2758BFE20C3EAF451385E1167F5978FDAA
563CB980D07BB4571A7802A1D1A0668E4105C38A1D585CB2E2B082C33740E433
52DD4C3DC7031ECBB52F266AA396BBEE83B4142C7474BA681A267905DB33072F
29E93D081C47A75EBCD9AB00C612BB55099765AA7B9FB0CA18FC226285A671C8
B5F55563787A0366005D26A526A45FA4CA0B34D0BCFC8698538B028AF9D205C0
82E22050DE9DC3C483560AA41BB78B700EA9E54785AE0051F58461F2F6A08F13
797B6AA207743343EE303BBA5C5FCBF3C0DEA3251BD288BC77AFEC5BC3AF5483
ADCF5D14B2FA47DE1EB2F18190A656A1C7E607C1EE140C4298483BD8BD040B21
E09C224FB4652766113C33EA18C63EA538E99A28D7669585F1131AB616CC55B9
8E3E24148BCF6677D5B329DDABFA63ADAB97ABBCF1A75DF0AAEB697B43326440
3507CCA6A937C01972B261985884833E3ED5A52297BECEA0C6DA37449DDE4CF4
9F18FDB386049AAC855BF402D47E63AF916984DD5265FDBF4B4FA61ED5A4D689
9CCB6982B8AB4CC5A7475AAA8632F229B425C363F9C096219E15456C3BBA1D51
B965269A70C447925CAF8EE670A17724B8F8851755275AA2D283DF320DF89A0F
9CCA168C1FEF28EC18E8066820094E26E0DF5B8473D103A267478331E7F086D5
0B8A238223078E361979352B25C620AFFF24CC5BF86CB17AE178C6720968F68B
D13633E3D63D48C7715A2D3932C3C286053A91867F56778A7BA49EEEFA87529A
1C8519A350778582EE047060F38786D156B7213B8CFCFF38ABA5D3E4A0364733
216817CC778BBA25DB7953DDCD5AEAEE40F2BB0FE63A28D6B23FCD2FB0B87770
45C8A52C70F3B5F4FCFB0788C2322ED2F134118C907A1D685CBE7EEFB723E559
86CBA482A831D87FC2A3E16AFE16F0D30576A7D6A3CBC1922314AFC006AA0BD7
AC68EC41FEEC1A264EC630D35ACE18A78D3D94501D711B13D6D50E89804A7159
FAEDBB29314B820EF0123F7E32FC1CA682D11BAF1907DC58AD3B26B85948F7E1
50EC227FE6C3749239F093907776A4A49E31E50F400E675465290C033D79265B
200E1F1047E645258787D529B578E3F35568AE562FE87955A006EEB76C31FC99
3F8B73EDD669671AABD46845444A46CE6626C1680B6CB915AFA56502000478CF
411BE40D09C38FAA45561B3E09AD842DEEA78F99F9B238229865BCBD8227CE46
E44E8E5B2909223ED81BF1E046B2DE502E09162AC1637169EAED5C8BD4C86C7B
97AAAE4FB70B37B246F1F28E85F239F93384EA19D1F4BD39AA108B056C281898
AF9CC0595E0C728B92A12E52C7ECC5936BCEE6EFFBBD16CC553B09CF3244C50D
5D907312037E41B2E83ACAB9112CC610FD36CD76077ED1926AE2805386C35CC3
3C980A2FB75F3F23BCC6B21394BC5415EEF84A8C123048026B4A7A5E2D0D53A0
B284CDC90E375DD0A2B8CE22B8A6B0589072E3E14A92B3AB50ED4A92442A4026
DE79EE1B996021A3C31A3004768D335649652A229B7133575F9176EC0751856C
3E4A50E12BDC22233C09BE22E7C7D538BABD2D6C89A4C49591E17234A4061CE4
4B35DB91BD6414E9412A51C0F338DE3F104E88469C30F86F263621EACDA85947
B9ECB4C4ECD99EB795E4553C8659E521E2D7D0381591A4EA3D5202D35D385061
C1F8D479C776965AA4BC3F7FD6665DCBD290257694D5F694437014545C1CE91A
1650568A24410F04814320768986720A76EF16F1EA0CFC25C21AA7921825904D
AFA78DBF27DBE65FA2CAFDC2DB0F476908DAEE8973DBA5B351A23C22F316DF97
054E4E64ED0753CD7621D3748EFDC1A271F1B870D952EE20CFE68BEB26AED7AF
B4388C98753F1660E7CD1E6BDC660888E8A90A5EC4705978A64A087D3A192DE2
6ECABCA5EFE82609868026B898154F7C999B2798CD99C71058C6E1686A3FB2E3
7CE14B7236C1F00D5DEA96A3529F36DC57F1F1E9E4AFF00A64EADB0A6BD70EEA
ABE5939C7CAE8C03CDA6A3D06CCDD5363C94893B550CD91BAE812F78BA01DC53
70026E143C449E7C8116EA46626A61080AF43FD7C891D396B0929EE786984327
9EF1070FCAE7C2C2970E8CD0F289CE17DB896DBDA5400F570DB0FEBE421B973F
FCCAE799D7CA65C2E7A5025AAD0B5389EEF7DCB5A89D49D3F3D452595A740387
3762674CA9B273B69D17976982057E592B875CF41EF09A3FFDFABF40429185CB
8014090F967437171E461AD2C3878FB11AEF06662DEAD2451F61CCE635FE3D03
80E8D5FC965CEBADE7C7DF6B8B65B1E97C8EB9BA68CCBEB212C3432CC61B8FE1
208B0057791966866C904488AE3F456EAD366A4B8B809C83050CD3B00A5719B6
6B3A090F0048363CB586DD754612EF5CCA5622C690888719ABE592C0EC6BCBDC
3C4B59BA5B97EC86478AFDA7BF7ADF5E53B866054E518FFBB23F3611998C548E
94B6BB55F0E31336424DACCA481610D8AE858BFE6E6745A672706A736919C213
A28956BC9C19AD996F73D8730989D74DC7C79CA60AEDE240F6361F7296BA4E6D
31E1517DD5410D1D4334FC9C6055B94DD24622E82DBF7D7E0706C40011ACCFB8
FD93FD18DB399837FA678A897DF30F5DBD1108DDEE48E584116AC298E12D5642
87DCF3B7B5E122D50ADD052297509142453BA0DCBC35987E8CEB34FD4AF97DA3
1C2905050D3F9D0228C03914A29531E873BE68D172F4B3121313351469F25633
50037CF189FB5E5822419A627658E9F05E62E66FCF248DC1700F0A5D7C77F7D2
C68B666CE9FB12BCE52DFA8DC6B7E2995A6F32DBFB5A248D87616F562C917D04
7D9A0C0F35F121BAFA96487F6DE7F3C84736CC4FB27FA09472E7172B3340F49F
191A0ED328093CCDB26FF903D8914D22AAE63E90C9C993479B9A7B2D00590311
742504A2979EB1CAF2A0D1D79579F81DABA3D28CE096606C17D5032AB21C7B5E
6C8EA137DD72B4B674905F6E2A732D74E1071AD614E0C7B23D318777AD081BCC
10B84A0F4A51AFB0B9C6C4D7D275D069000F7B0C483FE4AF5CAE47DEB22EB21B
1C6E62D6DF37EEE8BE6F27A5491CD4D2FB715B59CD4C1C3E84D70A56CD161A4B
C0B33E94860E9BF11D637C92486E6673AB088575B532B9D2D4656B58DD0AB6F6
30F7E47941E1ECEC0CB6C6B6B7D05901ECD7D4F7BD5CC007FCB829CFF2BBA181
1D428CEF5EE6759A0B27D41EF7C70F8F16A8D10BDBFE204BFF2D086D27D7C708
2EC84FC8F70BBF70241D31B4AF563312F572084E856DAFC8C21D7BEDE00274FA
3A8B44B4B6373641B87467C9FB573411389480B48E9F2C62AABE0904AF192A44
33EF6D2D7736E192C2AFB93209135D6F36497CCF60DE4027FCCD82565F3E431C
BABC4756C954828EDFB8BF1C98F102499D8B9CD9ACF0603FECDCF1FE8BC68B2E
1F8E6E876C4E5608
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /RPCROO+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 376 298 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-270 -200 4275 3375 re
f
-270 -200 4275 3375 re
f
285 175 3315 2745 re
f
5.0025 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
285 175 m
3600 175 l
S
285 175 m
285 208.148 l
S
758.574 175 m
758.574 208.148 l
S
1232.14 175 m
1232.14 208.148 l
S
1705.72 175 m
1705.72 208.148 l
S
2179.28 175 m
2179.28 208.148 l
S
2652.86 175 m
2652.86 208.148 l
S
3126.43 175 m
3126.43 208.148 l
S
3600 175 m
3600 208.148 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 11.25 3.75] Tm
0 0 Td
/F8_0 9.99975 Tf
(\(-8, -6])
[3.329917
0
3.329917
0
5.559861
0
2.779931
0
2.779931
0
3.329917
0
5.559861
0
2.779931
0] Tj
-1790.82 TJm
(\(-6, -4])
[3.329917
0
3.329917
0
5.559861
0
2.779931
0
2.779931
0
3.329917
0
5.559861
0
2.779931
0] Tj
-1790.86 TJm
(\(-4, -2])
[3.329917
0
3.329917
0
5.559861
0
2.779931
0
2.779931
0
3.329917
0
5.559861
0
2.779931
0] Tj
-1978.33 TJm
(\(-2, 0])
[3.329917
0
3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2311.33 TJm
(\(0, 2])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2456.82 TJm
(\(2, 4])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2456.86 TJm
(\(4, 6])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
-2456.82 TJm
(\(6, 8])
[3.329917
0
5.559861
0
2.779931
0
2.779931
0
5.559861
0
2.779931
0] Tj
Q
285 175 m
285 2920 l
S
285 175 m
318.148 175 l
S
285 632.5 m
318.148 632.5 l
S
285 1090 m
318.148 1090 l
S
285 1547.5 m
318.148 1547.5 l
S
285 2005 m
318.148 2005 l
S
285 2462.5 m
318.148 2462.5 l
S
285 2920 m
318.148 2920 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 17.75 14.125] Tm
0 0 Td
/F8_0 9.99975 Tf
(0)
[5.559861
0] Tj
-15.75 45.75 Td
(0.05)
[5.559861
0
2.779931
0
5.559861
0
5.559861
0] Tj
-9.75 91.5 Td
(0.1)
[5.559861
0
2.779931
0
5.559861
0] Tj
-15.75 137.25 Td
(0.15)
[5.559861
0
2.779931
0
5.559861
0
5.559861
0] Tj
-9.75 183 Td
(0.2)
[5.559861
0
2.779931
0
5.559861
0] Tj
-15.75 228.75 Td
(0.25)
[5.559861
0
2.779931
0
5.559861
0
5.559861
0] Tj
-9.75 274.5 Td
(0.3)
[5.559861
0
2.779931
0
5.559861
0] Tj
Q
0 J
285 175 m
3600 175 l
S
7.5 w
/DeviceRGB {} CS
[0 0.447 0.7402] SC
315 2176.68 m
315 2193.25 301.566 2206.68 285 2206.68 c
268.434 2206.68 255 2193.25 255 2176.68 c
255 2160.11 268.434 2146.68 285 2146.68 c
301.566 2146.68 315 2160.11 315 2176.68 c
h
S
788.57 1567.32 m
788.57 1583.89 775.141 1597.32 758.57 1597.32 c
742.004 1597.32 728.57 1583.89 728.57 1567.32 c
728.57 1550.75 742.004 1537.32 758.57 1537.32 c
775.141 1537.32 788.57 1550.75 788.57 1567.32 c
h
S
1262.14 861.922 m
1262.14 878.488 1248.71 891.922 1232.14 891.922 c
1215.57 891.922 1202.14 878.488 1202.14 861.922 c
1202.14 845.355 1215.57 831.922 1232.14 831.922 c
1248.71 831.922 1262.14 845.355 1262.14 861.922 c
h
S
1735.71 475.711 m
1735.71 492.277 1722.28 505.711 1705.71 505.711 c
1689.15 505.711 1675.71 492.277 1675.71 475.711 c
1675.71 459.141 1689.15 445.711 1705.71 445.711 c
1722.28 445.711 1735.71 459.141 1735.71 475.711 c
h
S
2209.29 544.844 m
2209.29 561.414 2195.85 574.844 2179.29 574.844 c
2162.72 574.844 2149.29 561.414 2149.29 544.844 c
2149.29 528.277 2162.72 514.844 2179.29 514.844 c
2195.85 514.844 2209.29 528.277 2209.29 544.844 c
h
S
2682.86 803.813 m
2682.86 820.383 2669.43 833.813 2652.86 833.813 c
2636.29 833.813 2622.86 820.383 2622.86 803.813 c
2622.86 787.246 2636.29 773.813 2652.86 773.813 c
2669.43 773.813 2682.86 787.246 2682.86 803.813 c
h
S
3156.43 1481.05 m
3156.43 1497.62 3143 1511.05 3126.43 1511.05 c
3109.86 1511.05 3096.43 1497.62 3096.43 1481.05 c
3096.43 1464.48 3109.86 1451.05 3126.43 1451.05 c
3143 1451.05 3156.43 1464.48 3156.43 1481.05 c
h
S
3630 2490.6 m
3630 2507.16 3616.57 2520.6 3600 2520.6 c
3583.43 2520.6 3570 2507.16 3570 2490.6 c
3570 2474.03 3583.43 2460.6 3600 2460.6 c
3616.57 2460.6 3630 2474.03 3630 2490.6 c
h
S
5.0025 w
285 175 m
285 2176.68 l
S
758.574 175 m
758.574 1567.32 l
S
1232.14 175 m
1232.14 861.918 l
S
1705.72 175 m
1705.72 475.711 l
S
2179.28 175 m
2179.28 544.848 l
S
2652.86 175 m
2652.86 803.816 l
S
3126.43 175 m
3126.43 1481.05 l
S
3600 175 m
3600 2490.59 l
S
7.5 w
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
315 1559.82 m
315 1576.39 301.566 1589.82 285 1589.82 c
268.434 1589.82 255 1576.39 255 1559.82 c
255 1543.26 268.434 1529.82 285 1529.82 c
301.566 1529.82 315 1543.26 315 1559.82 c
h
S
788.57 1432.85 m
788.57 1449.41 775.141 1462.85 758.57 1462.85 c
742.004 1462.85 728.57 1449.41 728.57 1432.85 c
728.57 1416.28 742.004 1402.85 758.57 1402.85 c
775.141 1402.85 788.57 1416.28 788.57 1432.85 c
h
S
1262.14 578.121 m
1262.14 594.691 1248.71 608.121 1232.14 608.121 c
1215.57 608.121 1202.14 594.691 1202.14 578.121 c
1202.14 561.555 1215.57 548.121 1232.14 548.121 c
1248.71 548.121 1262.14 561.555 1262.14 578.121 c
h
S
1735.71 412.973 m
1735.71 429.543 1722.28 442.973 1705.71 442.973 c
1689.15 442.973 1675.71 429.543 1675.71 412.973 c
1675.71 396.406 1689.15 382.973 1705.71 382.973 c
1722.28 382.973 1735.71 396.406 1735.71 412.973 c
h
S
2209.29 523.668 m
2209.29 540.234 2195.85 553.668 2179.29 553.668 c
2162.72 553.668 2149.29 540.234 2149.29 523.668 c
2149.29 507.098 2162.72 493.668 2179.29 493.668 c
2195.85 493.668 2209.29 507.098 2209.29 523.668 c
h
S
2682.86 727.871 m
2682.86 744.438 2669.43 757.871 2652.86 757.871 c
2636.29 757.871 2622.86 744.438 2622.86 727.871 c
2622.86 711.301 2636.29 697.871 2652.86 697.871 c
2669.43 697.871 2682.86 711.301 2682.86 727.871 c
h
S
3156.43 1584.51 m
3156.43 1601.08 3143 1614.51 3126.43 1614.51 c
3109.86 1614.51 3096.43 1601.08 3096.43 1584.51 c
3096.43 1567.94 3109.86 1554.51 3126.43 1554.51 c
3143 1554.51 3156.43 1567.94 3156.43 1584.51 c
h
S
3630 2131.1 m
3630 2147.67 3616.57 2161.1 3600 2161.1 c
3583.43 2161.1 3570 2147.67 3570 2131.1 c
3570 2114.54 3583.43 2101.1 3600 2101.1 c
3616.57 2101.1 3630 2114.54 3630 2131.1 c
h
S
5.0025 w
285 175 m
285 1559.82 l
S
758.574 175 m
758.574 1432.85 l
S
1232.14 175 m
1232.14 578.125 l
S
1705.72 175 m
1705.72 412.977 l
S
2179.28 175 m
2179.28 523.668 l
S
2652.86 175 m
2652.86 727.871 l
S
3126.43 175 m
3126.43 1584.51 l
S
3600 175 m
3600 2131.11 l
S
/DeviceRGB {} CS
[0.9297 0.6933 0.125] SC
285 2298.51 m
758.574 1403.3 l
1232.14 813.094 l
1705.72 527.875 l
2179.28 547.645 l
2652.86 872.41 l
3126.43 1502.17 l
3600 2436.92 l
S
/DeviceRGB {} CS
[0.4939 0.1841 0.5566] SC
285 1741.18 m
758.574 1081.16 l
1232.14 662.262 l
1705.72 484.457 l
2179.28 547.758 l
2652.86 852.16 l
3126.43 1397.66 l
3600 2184.28 l
S
/DeviceGray {} cs
[1] sc
367.5 2350 1560 487.5 re
f
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72 273.304] Tm
0 0 Td
/F8_0 9 Tf
(Pure geometry)
[6.003
0
5.004
0
2.997
0
5.004
0
2.502
0
5.004
0
5.004
0
5.004
0
7.497
0
5.004
0
2.502
0
2.997
0
4.5
0] Tj
Q
/DeviceRGB {} CS
[0 0.447 0.7402] SC
397.5 2766.8 m
607.5 2766.8 l
S
7.5 w
637.5 2766.79 m
637.5 2783.36 624.066 2796.79 607.5 2796.79 c
590.934 2796.79 577.5 2783.36 577.5 2766.79 c
577.5 2750.23 590.934 2736.79 607.5 2736.79 c
624.066 2736.79 637.5 2750.23 637.5 2766.79 c
h
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72 261.768] Tm
0 0 Td
/F8_0 9 Tf
(Nerual net correction)
[6.498
0
5.004
0
2.997
0
5.004
0
5.004
0
1.998
0
2.502
0
5.004
0
5.004
0
2.502
0
2.502
0
4.5
0
5.004
0
2.997
0
2.997
0
5.004
0
4.5
0
2.502
0
1.998
0
5.004
0
5.004
0] Tj
Q
5.0025 w
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
397.5 2651.43 m
607.5 2651.43 l
S
7.5 w
637.5 2651.43 m
637.5 2668 624.066 2681.43 607.5 2681.43 c
590.934 2681.43 577.5 2668 577.5 2651.43 c
577.5 2634.86 590.934 2621.43 607.5 2621.43 c
624.066 2621.43 637.5 2634.86 637.5 2651.43 c
h
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72 250.232] Tm
0 0 Td
/F8_0 9 Tf
(Pure geometry 2. order fit)
[6.003
0
5.004
0
2.997
0
5.004
0
2.502
0
5.004
0
5.004
0
5.004
0
7.497
0
5.004
0
2.502
0
2.997
0
4.5
0
2.502
0
5.004
0
2.502
0
2.502
0
5.004
0
2.997
0
5.004
0
5.004
0
2.997
0
2.502
0
2.502
0
1.998
0
2.502
0] Tj
Q
5.0025 w
/DeviceRGB {} CS
[0.9297 0.6933 0.125] SC
397.5 2536.07 m
697.5 2536.07 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 72 238.696] Tm
0 0 Td
/F8_0 9 Tf
(Neural net 2. order fit)
[6.498
0
5.004
0
5.004
0
2.997
0
5.004
0
1.998
0
2.502
0
5.004
0
5.004
0
2.502
0
2.502
0
5.004
0
2.502
0
2.502
0
5.004
0
2.997
0
5.004
0
5.004
0
2.997
0
2.502
0
2.502
0
1.998
0
2.502
0] Tj
Q
/DeviceRGB {} CS
[0.4939 0.1841 0.5566] SC
397.5 2420.7 m
697.5 2420.7 l
S
/DeviceGray {} CS
[0.1489] SC
367.5 2350 1560 487.5 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font RPCROO+Helvetica
%%EOF
